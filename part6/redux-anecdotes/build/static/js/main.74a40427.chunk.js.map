{"version":3,"sources":["reducers/filterReducer.js","reducers/anecdoteReducer.js","reducers/notificationReducer.js","store.js","services/anecdotes.js","components/AnecdoteForm.js","components/Filter.js","components/Notification.js","components/AnecdoteList.js","App.js","index.js"],"names":["filterReducer","state","action","type","filter","asObject","anecdote","content","votes","reducer","console","log","map","note","id","data","concat","initialState","notificationReducer","combineReducers","anecdotes","anecdoteReducer","notification","store","createStore","composeWithDevTools","baseUrl","getAll","a","axios","get","response","createNew","object","post","NewAnecdote","props","dispatch","useDispatch","addAnecdote","event","preventDefault","target","value","anecdoteService","newAnecdote","setTimeout","onSubmit","name","Filter","style","marginBottom","onChange","filterChange","Notification","useSelector","border","padding","borderWidth","Anecdote","handleClick","onClick","AnecdoteList","toLowerCase","includes","sort","b","reverse","anec","App","useEffect","then","initializeAnecdotes","AnecdoteForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74a40427.chunk.js","sourcesContent":["const filterReducer = (state = '', action) => {\n    switch (action.type) {\n      case 'SET_FILTER':\n        return action.filter\n      default:\n        return state\n    }\n  }\n  \n  export const filterChange = filter => {\n    return {\n      type: 'SET_FILTER',\n      filter,\n    }\n  }\n  \n  export default filterReducer","/*const anecdotesAtStart = [\n  'If it hurts, do it more often',\n  'Adding manpower to a late software project makes it later!',\n  'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n  'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n  'Premature optimization is the root of all evil.',\n  'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n]*/\n\n//const getId = () => (100000 * Math.random()).toFixed(0)\n\nconst asObject = (anecdote) => {\n  return {\n    content: anecdote,\n    votes: 0\n  }\n}\n\nexport const createAnecdote = (anecdote) => {\n  return {\n    type: 'NEW_ANECDOTE',\n    data: asObject(anecdote)\n  }\n}\n\nexport const vote = (id) => {\n\n  return {\n    type: 'VOTE',\n    data: {id}\n  }\n}\n\nexport const initializeAnecdotes = (anecdotes) => {\n  return {\n    type: 'INIT_ANECDOTES',\n    data: anecdotes,\n  }\n}\n\n\n//const initialState = anecdotesAtStart.map(asObject)\n\nconst reducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n\n  switch (action.type) {\n    case 'VOTE':\n      return state.map(note => note.id === action.data.id ? {...note, votes: note.votes+1} : note)\n    case 'NEW_ANECDOTE':\n      return state.concat(action.data)\n    case 'INIT_ANECDOTES':\n      return action.data\n    default: return state\n  }\n}\n\nexport default reducer","const initialState = \n    'You can vote exciting anectodes or add new ones'\n\nconst notificationReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'NEW_NOTIFICATION':\n        return action.data\n      case 'CLEAR_NOTIFICATION':\n        return ''\n      default:\n        return state\n    }\n  }\n  \n  export const voteNotification = anec => {\n    return {\n      type: 'NEW_NOTIFICATION',\n      data: `you voted '${anec}'`\n    }\n  }\n\n  export const additionNotification = anec => {\n    return {\n      type: 'NEW_NOTIFICATION',\n      data: `you added '${anec}'`\n    }\n  }\n\n  export const clearNotification = () => {\n    return {\n      type: 'CLEAR_NOTIFICATION'\n    }\n  }\n  \n  export default notificationReducer","\nimport { createStore, combineReducers } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport filterReducer from './reducers/filterReducer'\nimport anecdoteReducer from './reducers/anecdoteReducer'\nimport notificationReducer from './reducers/notificationReducer'\n\n\nconst reducer = combineReducers({\n  anecdotes: anecdoteReducer,\n  filter: filterReducer,\n  notification: notificationReducer\n})\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools()\n)\n\nexport default store","import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/anecdotes'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst createNew = async (content) => {\n    const object = { content }\n    const response = await axios.post(baseUrl, object)\n    return response.data\n  }\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { \n    getAll,\n    createNew\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { createAnecdote } from '../reducers/anecdoteReducer'\nimport { additionNotification, clearNotification } from '../reducers/notificationReducer'\nimport anecdoteService from '../services/anecdotes'\n\n\nconst NewAnecdote = (props) => {\n  const dispatch = useDispatch()\n\n  const addAnecdote = async (event) => {\n    event.preventDefault()\n    const content = event.target.anecdote.value\n    event.target.anecdote.value = ''\n    const newAnecdote = await anecdoteService.createNew(content)\n    dispatch(createAnecdote(newAnecdote))\n    \n    dispatch(additionNotification(content))\n    setTimeout(() => {\n      dispatch(clearNotification())\n      }, 5000)\n  }\n\n  return (\n    <div>\n      <h2>create new</h2>\n        <form onSubmit={addAnecdote}>\n          <input name=\"anecdote\" />\n          <button type=\"submit\">create</button>\n        </form>\n    </div>\n  )\n}\n\nexport default NewAnecdote","import React from 'react'\nimport { filterChange } from '../reducers/filterReducer'\nimport { useDispatch } from 'react-redux'\n\n\n\nconst Filter = () => {\n  const dispatch = useDispatch()\n\n  const handleChange = (event) => {\n    event.preventDefault()\n    const filter = event.target.value\n    dispatch(filterChange(filter))\n  }\n  const style = {\n    marginBottom: 10\n  }\n\n  return (\n    <div style={style}>\n      filter <input onChange={handleChange} />\n    </div>\n  )\n}\n\nexport default Filter","\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notification)\n\n  const style = {\n    border: 'solid',\n    padding: 10,\n    borderWidth: 1\n  }\n  \n  if (notification === '') return <div></div>\n\n  return (\n    <div style={style}>\n      {notification}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { vote } from '../reducers/anecdoteReducer'\nimport Filter from '../components/Filter'\nimport Notification from '../components/Notification'\nimport { voteNotification, clearNotification } from '../reducers/notificationReducer'\n\n\nconst Anecdote = ({ anecdote, handleClick }) => {\n  return(\n    <div>\n      {anecdote.content}\n      <div> has {anecdote.votes}\n      <button onClick={handleClick}>vote</button>\n      </div>\n    </div>\n  )\n}\n\nconst AnecdoteList = () => {\n  const dispatch = useDispatch()\n  const anecdotes = useSelector(state => {\n    if ( state.filter === '' ) {\n      return state.anecdotes\n    }\n    return state.anecdotes.filter(anecdote => anecdote.content.toLowerCase().includes(state.filter.toLowerCase()))\n  })\n\n  return(\n    <div>\n      <Notification/>\n      <br></br>\n      <Filter/>\n      {anecdotes.sort((a,b)=> a.votes-b.votes).reverse().map(anecdote =>\n        <Anecdote\n          key={anecdote.id}\n          anecdote={anecdote}\n          handleClick={() => {\n            dispatch(vote(anecdote.id))\n            dispatch(voteNotification(anecdote.content))\n            setTimeout(() => {\n                dispatch(clearNotification())\n              }, 5000)\n          }\n          }\n        />\n      )}\n    </div>\n  )\n}\n\nexport default AnecdoteList","import React, {useEffect} from 'react'\nimport AnecdoteForm from './components/AnecdoteForm'\nimport AnecdoteList from './components/AnecdoteList'\nimport anecdoteService from './services/anecdotes'\nimport { initializeAnecdotes } from './reducers/anecdoteReducer'\nimport { useDispatch } from 'react-redux'\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    anecdoteService\n      .getAll().then(anecdotes => dispatch(initializeAnecdotes(anecdotes)))\n  }, [dispatch])\n\n  return (\n    <div>\n      <h2>Anecdotes</h2>\n      <AnecdoteList/>\n      <AnecdoteForm/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}